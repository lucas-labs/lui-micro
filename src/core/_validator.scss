@use 'sass:map';
@use 'sass:list';

/// Validate the theme map
@mixin validate($theme) {
    // @if (not ($theme == null)) and (list.length($theme) > 0) {
    //     $colors: map.get($theme, 'colors');
    //     $typographies: map.get($theme, 'typographies');

    //     @include -validate-typographies($typographies);
    //     @include -validate-colors($colors);
    // } @else {
    //     @error "Theme is not valid (empty or null)";
    // }
}

/// colors text and background are not nullable
/// because they are used to generate contrast colors, etc
@mixin -validate-colors($colors) {
    @if $colors == null {
        @error "Theme is not valid, 'colors' is not nullable";
    }

    @include -validate-key($colors, 'text', 'colors/');
    @include -validate-key($colors, 'background', 'colors/');
}

/// base typo is not nullable because it is used to generate
/// other typographies
@mixin -validate-typographies($typographies) {
    @if $typographies == null {
        @error "Theme is not valid, 'typographies' is not nullable";
    }

    @include -validate-key($typographies, 'base', 'typographies/');

    $prefix: 'typographies/base/';
    $base: map.get($typographies, 'base');
    @include -validate-key($base, 'family', $prefix);
    @include -validate-key($base, 'size', $prefix);
    @include -validate-key($base, 'weight', $prefix);
    @include -validate-key($base, 'line-height', $prefix);
    @include -validate-key($base, 'letter-spacing', $prefix);
}

@mixin -validate-key($map, $key, $prefix: "") {
    @if (not (map.has-key($map, $key))) {
        @error "Theme is not valid, #{$prefix}#{$key} is not nullable";
    }
}